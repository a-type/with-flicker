{"version":3,"sources":["services/flickr.ts","features/photos/photosSlice.ts","features/photos/Search.tsx","features/photos/Photo.tsx","features/photos/PhotoListItem.tsx","components/VisibilityTrigger.tsx","features/photos/Spinner.tsx","features/photos/PhotoList.tsx","features/photos/Lightbox.tsx","components/EmptyState.tsx","App.tsx","app/store.ts","serviceWorker.ts","theme/theme.ts","index.tsx"],"names":["searchPhotos","a","text","page","fetch","process","response","ok","console","error","status","Error","json","body","photos","searchSlice","createSlice","name","initialState","filter","fetching","results","latestPage","pageCount","focusedPhotoId","initial","reducers","beginSearch","state","action","payload","value","completeSearch","beginPageFetch","focusPhoto","id","closeFocusedPhoto","fetchFailed","actions","selectSearchFilter","selectPhotos","selectLatestPage","selectHasNextPage","selectFetching","selectFocusedPhoto","find","photo","selectIsInitial","selectError","useStyles","makeStyles","theme","root","backgroundColor","palette","background","default","padding","spacing","borderRadius","shape","searchButton","flex","margin","marginLeft","minWidth","startIcon","breakpoints","down","marginRight","Search","className","props","classes","savedSearchTerm","useSelector","dispatch","useDispatch","React","setValue","handleSubmit","ev","preventDefault","length","pages","searchAsync","isSmall","useMediaQuery","Box","component","display","flexDirection","alignContent","onSubmit","clsx","TextField","onChange","target","label","variant","fullWidth","Button","type","color","SearchTwoTone","aria-label","undefined","PhotoFormat","Photo","format","Large","rest","src","farm","server","secret","img","alt","title","position","top","left","right","bottom","content","zIndex","boxShadow","secondary","main","transition","transitions","create","pointerEvents","width","height","PhotoListItem","photoId","handleClick","ButtonBase","onClick","Square","whileHover","scale","usePrevious","ref","current","VisibilityTrigger","onVisible","onHidden","elementRef","isVisible","setIsVisible","wasVisible","observer","IntersectionObserver","entries","isIntersecting","observe","disconnect","Spinner","div","opacity","animate","delay","CircularProgress","alignItems","marginBottom","grid","gridTemplateColumns","gridAutoFlow","gap","up","gridItem","paddingTop","overflow","grey","gridItemContents","objectFit","PhotoList","hasNextPage","fetchNextPage","getState","currentFilter","currentPage","map","key","Lightbox","focusedPhoto","onClose","Dialog","open","maxWidth","EmptyState","style","role","fontSize","Typography","minHeight","search","alignSelf","appBar","list","marginTop","App","Container","p","store","configureStore","reducer","photosReducer","Boolean","window","location","hostname","match","createMuiTheme","primary","paper","MuiFilledInput","disableUnderline","overrides","input","MuiInputLabel","filled","transform","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e890cb77.chunk.js","sourcesContent":["/**\n * This module is the kind of thing I'd normally start with when building\n * out a client to interact with an external API - unless the vendor offered\n * their own SDK. Just gradually build out functionality with an intuitive\n * API, not getting too attached to usages until patterns begin to develop.\n */\n\nexport type PhotoData = {\n  id: string;\n  owner: string;\n  secret: string;\n  server: string;\n  title: string;\n  farm: number;\n};\n\nexport async function searchPhotos({\n  text,\n  page = 1,\n}: {\n  text: string;\n  page?: number;\n}) {\n  // call Flickr API to fetch image data - gotta say, their response is a little odd.\n  // nojsoncallback is required to actually return... valid JSON.\n  const response = await fetch(\n    `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${process.env.REACT_APP_FLICKR_API_KEY}&text=${text}&page=${page}&per_page=50&format=json&nojsoncallback=1&safe_search=1`,\n  );\n\n  if (!response.ok) {\n    // TODO; surface to user\n    const text = await response.text();\n    console.error(`Flickr API error`, response.status, text);\n    throw new Error('Bad response from Flickr API');\n  }\n\n  const body = await response.json();\n  return body.photos as {\n    page: number;\n    pages: number;\n    photo: PhotoData[];\n  };\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { searchPhotos, PhotoData } from '../../services/flickr';\n\ninterface SearchState {\n  initial: boolean;\n  filter: string;\n  fetching: boolean;\n  results: {\n    photos: PhotoData[];\n    latestPage: number;\n    pageCount: number;\n  };\n  focusedPhotoId: string | null;\n  error: string | null;\n}\n\nconst initialState: SearchState = {\n  filter: '',\n  fetching: false,\n  results: {\n    photos: [],\n    latestPage: 0,\n    pageCount: 0,\n  },\n  focusedPhotoId: null,\n  // it's a slight hack - but this starts true and is set to false\n  // after the first search, then never changed again. Helps track whether\n  // we're in a completely initial state or not.\n  initial: true,\n  error: null,\n};\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    /**\n     * @note on these reducers - redux-toolkit integrates immer,\n     * which allows immutable state updates using mutable syntax.\n     * I'm not mutating the Redux store!\n     */\n\n    beginSearch: (state, action: PayloadAction<{ value: string }>) => {\n      state.filter = action.payload.value;\n      // since the filter has changed, reset the result cache.\n      state.results = {\n        photos: [],\n        latestPage: 0,\n        pageCount: 0,\n      };\n      state.fetching = true;\n      state.initial = false;\n      state.error = null;\n    },\n    completeSearch: (\n      state,\n      action: PayloadAction<{\n        page: number;\n        pageCount: number;\n        photos: PhotoData[];\n      }>,\n    ) => {\n      state.results = {\n        latestPage: action.payload.page,\n        pageCount: action.payload.pageCount,\n        photos: [...state.results.photos, ...action.payload.photos],\n      };\n      state.fetching = false;\n    },\n    beginPageFetch: (state) => {\n      state.fetching = true;\n      state.error = null;\n    },\n    focusPhoto: (state, action: PayloadAction<{ id: string }>) => {\n      state.focusedPhotoId = action.payload.id;\n    },\n    closeFocusedPhoto: (state) => {\n      state.focusedPhotoId = null;\n    },\n    fetchFailed: (state, action: PayloadAction<{ error: string }>) => {\n      state.error = action.payload.error;\n      state.fetching = false;\n    },\n  },\n});\n\n// public actions\n\nexport const searchAsync = ({ value }: { value: string }): AppThunk => async (\n  dispatch,\n) => {\n  // immediately update stored filter value\n  dispatch(searchSlice.actions.beginSearch({ value }));\n\n  try {\n    const response = await searchPhotos({ text: value });\n\n    dispatch(\n      searchSlice.actions.completeSearch({\n        page: response.page,\n        pageCount: response.pages,\n        photos: response.photo,\n      }),\n    );\n  } catch (err) {\n    dispatch(\n      searchSlice.actions.fetchFailed({\n        error: \"Couldn't load the images - try again?\",\n      }),\n    );\n  }\n};\n\n// this could use some improvement - plenty of duplicated logic here\n// and above.\nexport const nextPageAsync = (): AppThunk => async (dispatch, getState) => {\n  dispatch(searchSlice.actions.beginPageFetch());\n\n  const currentFilter = selectSearchFilter(getState());\n  const currentPage = selectLatestPage(getState());\n\n  try {\n    const response = await searchPhotos({\n      text: currentFilter,\n      page: currentPage + 1,\n    });\n\n    dispatch(\n      searchSlice.actions.completeSearch({\n        page: response.page,\n        pageCount: response.pages,\n        photos: response.photo,\n      }),\n    );\n  } catch (err) {\n    dispatch(\n      searchSlice.actions.fetchFailed({\n        error: \"Couldn't load the images - try again?\",\n      }),\n    );\n  }\n};\n\nexport const { focusPhoto, closeFocusedPhoto } = searchSlice.actions;\n\n// selectors\n\nexport const selectSearchFilter = (state: RootState) => state.photos.filter;\n\nexport const selectPhotos = (state: RootState) =>\n  state.photos.results.photos ?? [];\n\nexport const selectLatestPage = (state: RootState) =>\n  state.photos.results.latestPage;\n\nexport const selectHasNextPage = (state: RootState) =>\n  state.photos.results.latestPage < state.photos.results.pageCount;\n\nexport const selectFetching = (state: RootState) => state.photos.fetching;\n\n// memoizing this would be a good improvement.\nexport const selectFocusedPhoto = (state: RootState) => {\n  const id = state.photos.focusedPhotoId;\n  return state.photos.results.photos.find((photo) => photo.id === id) ?? null;\n};\n\nexport const selectIsInitial = (state: RootState) => state.photos.initial;\n\nexport const selectError = (state: RootState) => state.photos.error;\n\nexport default searchSlice.reducer;\n","import * as React from 'react';\nimport {\n  Box,\n  TextField,\n  makeStyles,\n  Button,\n  useMediaQuery,\n  Theme,\n} from '@material-ui/core';\nimport { SearchTwoTone } from '@material-ui/icons';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectSearchFilter, searchAsync } from './photosSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n  },\n  searchButton: {\n    flex: '0 0 auto',\n    margin: 'auto',\n    marginLeft: theme.spacing(2),\n    minWidth: '0',\n  },\n  startIcon: {\n    [theme.breakpoints.down('sm')]: {\n      marginRight: 0,\n      marginLeft: 0,\n    },\n  },\n}));\n\nexport function Search({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  const classes = useStyles();\n\n  // separation of Redux state and local state -\n  // Redux is used to manage the committed value which powers the search filter.\n  // Local state stores the ephemeral value which the user may be in the process\n  // of typing before submission.\n  const savedSearchTerm = useSelector(selectSearchFilter);\n  const dispatch = useDispatch();\n\n  const [value, setValue] = React.useState(savedSearchTerm);\n  const handleSubmit = React.useCallback(\n    (ev: React.FormEvent) => {\n      ev.preventDefault();\n\n      if (!value.length) return;\n\n      dispatch(\n        searchAsync({\n          value,\n        }),\n      );\n    },\n    [value, dispatch],\n  );\n\n  const isSmall = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'));\n\n  return (\n    <Box\n      component=\"form\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      alignContent=\"center\"\n      onSubmit={handleSubmit}\n      className={clsx(classes.root, className)}\n      {...props}\n    >\n      <TextField\n        value={value}\n        onChange={(ev) => setValue(ev.target.value)}\n        label=\"Search photos\"\n        variant=\"filled\"\n        fullWidth\n      />\n      <Button\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        startIcon={<SearchTwoTone />}\n        className={classes.searchButton}\n        classes={{ startIcon: classes.startIcon }}\n        aria-label={isSmall ? 'Search' : undefined}\n      >\n        {isSmall ? null : 'Search'}\n      </Button>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { PhotoData } from '../../services/flickr';\nimport { motion, MotionProps } from 'framer-motion';\n\n/**\n * These are taken from Flickr's docs: https://www.flickr.com/services/api/misc.urls.html\n */\nexport enum PhotoFormat {\n  // 150x150\n  Square = '_q',\n  // no size variation\n  Large = '',\n}\n\n// proptypes extend MotionProps to make it animateable\nexport type PhotoProps = MotionProps & {\n  photo: PhotoData;\n  format?: PhotoFormat;\n  className?: string;\n};\n\n/**\n * A simple Photo component which does the arcane Flickr URL\n * construction internally.\n */\nexport function Photo({\n  photo,\n  format = PhotoFormat.Large,\n  ...rest\n}: PhotoProps) {\n  const src = React.useMemo(() => {\n    return `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}${format}.jpg`;\n  }, [photo, format]);\n\n  return <motion.img src={src} alt={photo.title} {...rest} />;\n}\n","import * as React from 'react';\nimport { PhotoData } from '../../services/flickr';\nimport { useDispatch } from 'react-redux';\nimport { focusPhoto } from './photosSlice';\nimport { ButtonBase, makeStyles } from '@material-ui/core';\nimport { Photo, PhotoFormat } from './Photo';\nimport clsx from 'clsx';\n\nexport type PhotoListItemProps = {\n  photo: PhotoData;\n  className?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    // creates a focus ring effect\n    '&::before': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      content: '\"\"',\n      zIndex: 1,\n      boxShadow: `inset 0 0 0 0 ${theme.palette.secondary.main}`,\n      transition: theme.transitions.create('box-shadow'),\n      borderRadius: theme.shape.borderRadius,\n      // don't block hover event on image\n      pointerEvents: 'none',\n    },\n    '&:focus': {\n      '&::before': {\n        boxShadow: `inset 0 0 0 6px ${theme.palette.secondary.main}`,\n      },\n    },\n  },\n  photo: {\n    width: '100%',\n    height: '100%',\n  },\n}));\n\nexport function PhotoListItem({ photo, className }: PhotoListItemProps) {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const { id: photoId } = photo;\n\n  const handleClick = React.useCallback(() => {\n    dispatch(focusPhoto({ id: photoId }));\n  }, [dispatch, photoId]);\n\n  return (\n    <ButtonBase onClick={handleClick} className={clsx(classes.root, className)}>\n      <Photo\n        photo={photo}\n        format={PhotoFormat.Square}\n        className={classes.photo}\n        whileHover={{\n          scale: 1.1,\n        }}\n      />\n    </ButtonBase>\n  );\n}\n","import * as React from 'react';\nimport IntersectionObserver from 'inteobs';\n\n/**\n * Hook that returns the previous value stored in it. This is useful for comparing\n * props from one render to the next (for example, when using `useEffect` to handle\n * lifecycle changes).\n */\nfunction usePrevious<T extends any>(value: T) {\n  const ref = React.useRef<T | null>();\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nexport default usePrevious;\n\nexport type VisibilityTriggerProps = {\n  children?: React.ReactNode;\n  onVisible?: () => any;\n  onHidden?: () => any;\n};\n\n/**\n * A utility component that triggers a callback when it becomes visible\n * to the user.\n */\nexport function VisibilityTrigger({\n  onVisible,\n  onHidden,\n  ...rest\n}: VisibilityTriggerProps) {\n  const elementRef = React.useRef<HTMLDivElement>(null);\n  const [isVisible, setIsVisible] = React.useState(false);\n  const wasVisible = usePrevious(isVisible);\n\n  React.useEffect(() => {\n    if (!!wasVisible !== isVisible) {\n      if (isVisible) {\n        onVisible?.();\n      } else {\n        onHidden?.();\n      }\n    }\n  }, [wasVisible, isVisible, onHidden, onVisible]);\n\n  React.useEffect(() => {\n    if (!elementRef.current) return;\n\n    const { current } = elementRef;\n\n    const observer = new IntersectionObserver((entries) => {\n      setIsVisible(entries[0].isIntersecting);\n    });\n\n    observer.observe(current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [elementRef]);\n\n  return <div ref={elementRef} {...rest} />;\n}\n","import * as React from 'react';\nimport { motion } from 'framer-motion';\nimport { CircularProgress } from '@material-ui/core';\n\nexport function Spinner() {\n  return (\n    <motion.div\n      initial={{ opacity: 0, height: 0 }}\n      animate={{ opacity: 1, height: 80 }}\n      /*\n        delay showing the spinner for 2 seconds - if the content loads\n        faster, we never show a spinner, which makes the user feel like\n        the loading was faster.\n\n        React Suspense is also a great solution for this, but I opted\n        for a Redux-based async lifecycle and haven't really worked\n        out whether Suspense has a good compatibility story with Redux in\n        general. I'm used to working with GraphQL clients, though,\n        which largely support Suspense for data fetching even though\n        it's not 'official' yet.\n      */\n      transition={{ delay: 2 }}\n    >\n      <CircularProgress />\n    </motion.div>\n  );\n}\n","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFetching,\n  selectHasNextPage,\n  nextPageAsync,\n} from './photosSlice';\nimport { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { PhotoListItem } from './PhotoListItem';\nimport { VisibilityTrigger } from '../../components/VisibilityTrigger';\nimport { Spinner } from './Spinner';\nimport { PhotoData } from '../../services/flickr';\n\nexport type PhotoListProps = { className?: string; photos: PhotoData[] };\n\n// Material UI's built-in JSS styling\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    // I like to add a lot of spacing below a grid like this - maybe\n    // I'm making it up, but I feel like it helps the user intuit\n    // that there can be more content\n    marginBottom: theme.spacing(20),\n  },\n\n  grid: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gridAutoFlow: 'row dense',\n    gap: `${theme.spacing(2)}px`,\n\n    [theme.breakpoints.up('sm')]: {\n      gridTemplateColumns: 'repeat(3, 1fr)',\n    },\n    [theme.breakpoints.up('md')]: {\n      gridTemplateColumns: 'repeat(4, 1fr)',\n    },\n    [theme.breakpoints.up('lg')]: {\n      gridTemplateColumns: 'repeat(8, 1fr)',\n    },\n  },\n\n  gridItem: {\n    position: 'relative',\n    // an old trick for 1:1 ratio enforcement\n    paddingTop: '100%',\n    overflow: 'hidden',\n    borderRadius: theme.shape.borderRadius,\n    // helps to block out the space of the item if the image\n    // is slow to load\n    backgroundColor: theme.palette.grey[200],\n  },\n\n  gridItemContents: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  },\n}));\n\n/**\n * Renders the results of a photo search in a grid. Items can be clicked\n * to open the lightbox.\n */\nexport function PhotoList({ className, photos, ...props }: PhotoListProps) {\n  const classes = useStyles();\n\n  const fetching = useSelector(selectFetching);\n  const hasNextPage = useSelector(selectHasNextPage);\n\n  const dispatch = useDispatch();\n\n  const fetchNextPage = React.useCallback(() => {\n    dispatch(nextPageAsync());\n  }, [dispatch]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...props}>\n      <div className={classes.grid}>\n        {photos.map((photo) => (\n          <div className={classes.gridItem} key={photo.id}>\n            <PhotoListItem photo={photo} className={classes.gridItemContents} />\n          </div>\n        ))}\n      </div>\n      {/* Loading spinner for fetching state */}\n      {fetching && <Spinner />}\n      {/* Only show more if there's more to show */}\n      {!fetching && hasNextPage && (\n        <VisibilityTrigger onVisible={fetchNextPage} />\n      )}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFocusedPhoto, closeFocusedPhoto } from './photosSlice';\nimport { Dialog, makeStyles } from '@material-ui/core';\nimport { Photo } from './Photo';\n\nexport type LightboxProps = {\n  className?: string;\n};\n\nconst useStyles = makeStyles(() => ({\n  photo: {\n    // keep the aspect ratio of the image, while scaling it\n    // to fill a good portion of the viewport\n    width: '80vw',\n    height: 'auto',\n  },\n}));\n\n/**\n * Renders the currently active photo in a lightbox display, if there is one.\n */\nexport function Lightbox({ className }: LightboxProps) {\n  const classes = useStyles();\n\n  const focusedPhoto = useSelector(selectFocusedPhoto);\n  const dispatch = useDispatch();\n\n  const onClose = React.useCallback(() => {\n    dispatch(closeFocusedPhoto());\n  }, [dispatch]);\n\n  return (\n    <Dialog\n      open={!!focusedPhoto}\n      onClose={onClose}\n      className={className}\n      maxWidth={false}\n    >\n      {!!focusedPhoto && (\n        <Photo photo={focusedPhoto} className={classes.photo} />\n      )}\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nexport function EmptyState() {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      style={{ opacity: 0.9 }}\n    >\n      <span\n        role=\"img\"\n        aria-label=\"wave\"\n        style={{ fontSize: '10vmin', margin: 32 }}\n      >\n        👋\n      </span>\n      <Typography>\n        Hi there! Type a search term above to see some photos.\n      </Typography>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Search } from './features/photos/Search';\nimport { Container, makeStyles, Box, Typography } from '@material-ui/core';\nimport { PhotoList } from './features/photos/PhotoList';\nimport { Lightbox } from './features/photos/Lightbox';\nimport { useSelector } from 'react-redux';\nimport {\n  selectPhotos,\n  selectIsInitial,\n  selectError,\n} from './features/photos/photosSlice';\nimport { EmptyState } from './components/EmptyState';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  /**\n   * @note - when it comes to layout, I prefer to define a layout-relevant\n   * child class in the parent. This consolidates the locations of the styles\n   * required to achieve the layout, allows you to use different kinds of components\n   * as children with visual consistency, and just generally avoids coupling.\n   */\n  search: {\n    alignSelf: 'center',\n    position: 'sticky',\n    top: theme.spacing(2),\n    zIndex: theme.zIndex.appBar,\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '50vw',\n    },\n  },\n  list: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const photos = useSelector(selectPhotos);\n  const initial = useSelector(selectIsInitial);\n  const error = useSelector(selectError);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Search className={classes.search} />\n      {photos.length ? (\n        <PhotoList className={classes.list} photos={photos} />\n      ) : initial ? (\n        <EmptyState />\n      ) : null}\n      {error && (\n        <Box p={4}>\n          <Typography color=\"error\">{error}</Typography>\n        </Box>\n      )}\n      <Lightbox />\n    </Container>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport photosReducer from '../features/photos/photosSlice';\n\nexport const store = configureStore({\n  reducer: {\n    photos: photosReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nexport const theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: '#242432',\n    },\n    background: {\n      default: '#f4f6ff',\n      paper: '#ffffff',\n    },\n    primary: {\n      main: '#ea907a',\n    },\n    secondary: {\n      main: '#4f8a8b',\n    },\n    error: {\n      main: '#ff7171',\n    },\n  },\n  shape: {\n    borderRadius: 32,\n  },\n  props: {\n    MuiFilledInput: {\n      disableUnderline: true,\n    },\n  },\n  overrides: {\n    MuiFilledInput: {\n      root: {\n        borderRadius: 32,\n        padding: `8px 16px`,\n      },\n      input: {\n        padding: 8,\n      },\n    },\n    MuiInputLabel: {\n      filled: {\n        padding: '4px 16px',\n        borderRadius: 16,\n        transform: 'translate(8px, 12px) scale(1)',\n        '&$shrink': {\n          transform: 'translate(24px, -8px) scale(0.75)',\n          backgroundColor: '#ffffff',\n        },\n      },\n    },\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { theme } from './theme/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}